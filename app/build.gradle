apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"

    defaultConfig {
        applicationId "com.yunbiao.cccm"
        minSdkVersion 17
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        // 生产版本
        pro {

            // 服务地址
            buildConfigField "String", "DOMAIN", "com.yunbiao.cccm.common.Const.URL.PRO"
            // 服务端口
            buildConfigField "Integer", "PORT", "com.yunbiao.cccm.common.Const.PORT.PRO"
            // 是否打印日志到文件
            buildConfigField "boolean", "IS_LOG_TO_FILE", "false"
        }
        // 开发版本
        dev {
            // 服务地址
            buildConfigField "String", "DOMAIN", "com.yunbiao.cccm.common.Const.URL.DEV"
            // 服务端口
            buildConfigField "String", "PORT", "com.yunbiao.cccm.common.Const.PORT.DEV"
            // 是否打印日志到文件
            buildConfigField "boolean", "IS_LOG_TO_FILE", "false"
        }
    }

    repositories {
        flatDir { dirs 'libs' }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    //以下是为了找到android.os.SystemProperties这个隐藏的类
    String SDK_DIR = System.getenv("ANDROID_SDK_HOME")
    //("TAG", "SDK_DIR = " + SDK_DIR );
    if (SDK_DIR == null) {
        Properties props = new Properties()
        props.load(new FileInputStream(project.rootProject.file("local.properties")))
        SDK_DIR = props.get('sdk.dir');
    }
    dependencies {
        provided files("${SDK_DIR}/platforms/android-21/data/layoutlib.jar")
    }
    //以上是为了找到android.os.SystemProperties这个隐藏的类

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile(name: 'xwalk_core_library-17.46.448.10-arm', ext: 'aar')
    //约束布局
    //百分比布局
    compile files('libs/gson-2.8.5.jar')
    compile files('libs/universal-image-loader-1.9.5.jar')
    compile project(':vitamio')
    compile files('libs/smdt.jar')
    compile files('libs/BaiduLBS_Android.jar')
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'com.zhy:okhttputils:2.6.2'
    compile 'com.alibaba:fastjson:1.1.56.android'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:percent:23.2.1'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'io.reactivex.rxjava2:rxjava:2.2.4'
    compile 'io.reactivex.rxjava2:rxandroid:2.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}
